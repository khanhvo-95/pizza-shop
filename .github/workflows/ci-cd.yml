name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and test with Maven
        run: mvn --batch-mode --update-snapshots --no-transfer-progress clean package

      - name: Upload JAR file
        uses: actions/upload-artifact@v2
        with:
          name: app-jar
          path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Download JAR file
        uses: actions/download-artifact@v2
        with:
          name: app-jar
          path: target

      - name: Build Docker image
        run: |
          docker build -t 320272705977.dkr.ecr.us-east-1.amazonaws.com/pizza-shop-web-receiver:${GITHUB_SHA} .

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region us-east-1

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 320272705977.dkr.ecr.us-east-1.amazonaws.com

      - name: Tag and push Docker image
        run: |
          docker tag 320272705977.dkr.ecr.us-east-1.amazonaws.com/pizza-shop-web-receiver:${GITHUB_SHA} 320272705977.dkr.ecr.us-east-1.amazonaws.com/pizza-shop-web-receiver:latest
          docker push 320272705977.dkr.ecr.us-east-1.amazonaws.com/pizza-shop-web-receiver:${GITHUB_SHA}
          docker push 320272705977.dkr.ecr.us-east-1.amazonaws.com/pizza-shop-web-receiver:latest

      - name: Deploy to EKS
        run: |
          aws eks update-kubeconfig --region us-east-1 --name pizza-shop-eks-cluster
          export ECR_REPOSITORY_URL="320272705977.dkr.ecr.us-east-1.amazonaws.com/pizza-shop-web-receiver:${GITHUB_SHA}"
          envsubst < k8s-deployment.yaml > k8s/k8s-deployment.yaml
          echo "resources:" > k8s/kustomization.yaml
          echo "- k8s-deployment.yaml" >> k8s/kustomization.yaml
          kubectl kustomize k8s | kubectl apply -f - --force